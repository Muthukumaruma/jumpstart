{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Head from 'next/head';\nimport React from 'react';\nimport Country from '../components/banking/country';\nimport NETWORK from '../components/utls/network';\nimport SelectBtn from '../components/button/select-btn';\nimport Swift from '../components/banking/swift';\nimport Iban from '../components/banking/iban';\nimport '../sass/components/_banking.scss';\n\nvar Home = /*#__PURE__*/function (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"setSelectedCountry\", function (data) {\n      _this.setState({\n        selectedCountry: data\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setSelectedCurrency\", function (data) {\n      _this.state.currency.map(function (currency) {\n        currency.value === data && _this.setState({\n          selectedCurrency: currency\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setEntryOption\", function (data) {\n      _this.setState({\n        entryOption: data\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setSweftResponse\", function (data) {\n      _this.setState({\n        sweftResponse: data\n      });\n    });\n\n    _this.state = {\n      countrys: [],\n      currency: [],\n      selectedCountry: [],\n      selectedCurrency: [],\n      entryOption: \"sweft\",\n      sweftResponse: []\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getCountry();\n    }\n  }, {\n    key: \"getCountry\",\n    value: function getCountry() {\n      var self = this;\n      var country = [];\n      var currency = [];\n      NETWORK.get(\"https://restcountries.eu/rest/v2/all?fields=name;flag;currencies;alpha3Code\").then(function (res) {\n        res.data.map(function (data) {\n          country.push({\n            value: data.alpha3Code,\n            label: __jsx(\"div\", {\n              className: \"flag\"\n            }, __jsx(\"img\", {\n              src: data.flag\n            }), data.name),\n            country: data.name\n          });\n          currency.push({\n            value: data.alpha3Code,\n            label: __jsx(\"div\", {\n              className: \"flag\"\n            }, __jsx(\"img\", {\n              src: data.flag\n            }), data.currencies[0].code),\n            currency: data.currencies[0].code\n          });\n        });\n        self.setState({\n          countrys: country,\n          currency: currency\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"SPECIMAN \"), __jsx(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      })), __jsx(\"h1\", null, \"Welcome to Speciman\"), __jsx(\"div\", {\n        className: \"card\"\n      }, __jsx(\"div\", {\n        className: \"banking\"\n      }, __jsx(\"div\", {\n        className: \"banking__info\"\n      }, __jsx(\"h3\", null, \"Banking Information\"), __jsx(\"p\", null, \"We need to collect this information to send payments to your employer\\u2019s behalf.\"), __jsx(\"p\", null, \"Once you submit your informalities, we\\u2019ll verify your information before we start sending any payouts there.\")), __jsx(\"div\", {\n        className: \"banking__form\"\n      }, this.state.entryOption === 'sweft' ? __jsx(React.Fragment, null, __jsx(Country, {\n        countrys: this.state.countrys,\n        currency: this.state.currency,\n        selectedCountry: this.state.selectedCountry,\n        setSelectedCountry: this.setSelectedCountry,\n        selectedCurrency: this.state.selectedCurrency,\n        setSelectedCurrency: this.setSelectedCurrency\n      })) : __jsx(React.Fragment, null), __jsx(SelectBtn, {\n        entryOption: this.state.entryOption,\n        setEntryOption: this.setEntryOption\n      }), this.state.entryOption === 'sweft' ? __jsx(React.Fragment, null, __jsx(Swift, {\n        setSweftResponse: this.setSweftResponse\n      })) : __jsx(React.Fragment, null, __jsx(Iban, {\n        currency: this.state.currency\n      }))))));\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/ecom-muthukumar.u/prr/jumpstart/pages/index.js"],"names":["Head","React","Country","NETWORK","SelectBtn","Swift","Iban","Home","props","data","setState","selectedCountry","state","currency","map","value","selectedCurrency","entryOption","sweftResponse","countrys","getCountry","self","country","get","then","res","push","alpha3Code","label","flag","name","currencies","code","setSelectedCountry","setSelectedCurrency","setEntryOption","setSweftResponse","Component"],"mappings":"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","sourcesContent":["import Head from 'next/head';\nimport React from 'react';\nimport Country from '../components/banking/country';\nimport NETWORK from '../components/utls/network';\nimport SelectBtn from '../components/button/select-btn';\nimport Swift from '../components/banking/swift';\nimport Iban from '../components/banking/iban'\nimport '../sass/components/_banking.scss';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n        countrys:[],\n        currency:[],\n        selectedCountry:[],\n        selectedCurrency:[],\n        entryOption:\"sweft\",\n        sweftResponse:[]\n    }\n  }\n\n  componentDidMount(){\n    this.getCountry();\n  }\n\n  getCountry(){\n    let self = this;\n    let country = [];\n    let currency =[]\n    NETWORK.get(`https://restcountries.eu/rest/v2/all?fields=name;flag;currencies;alpha3Code`)\n    .then(function(res) {\n      res.data.map((data)=>{\n        country.push({value:data.alpha3Code, label:<div className='flag'><img src={data.flag} />{data.name}</div>, country:data.name});\n        currency.push({value:data.alpha3Code, label:<div className='flag'><img src={data.flag} />{data.currencies[0].code}</div> , currency:data.currencies[0].code})\n        \n      })\n      self.setState({\n        countrys:country,\n        currency:currency\n      })\n    })\n  }\n\n  setSelectedCountry = (data)=>{\n    this.setState({selectedCountry:data})\n  }\n\n  setSelectedCurrency = data =>{\n    this.state.currency.map((currency)=>{\n      currency.value === data && this.setState({selectedCurrency:currency})\n    })\n    \n  }\n\n  setEntryOption = (data)=>{\n    this.setState({entryOption:data})\n  }\n\n  setSweftResponse = data=>{\n    this.setState({sweftResponse:data})\n  }\n\n  render(){\n\n    return(\n      <>\n        <Head>\n          <title>SPECIMAN </title>\n          <link rel=\"icon\" href=\"/favicon.ico\" />\n        </Head>\n\n        <h1>Welcome to Speciman</h1>\n        <div className=\"card\">\n          <div className=\"banking\">\n            <div className=\"banking__info\">\n              <h3>Banking Information</h3>\n              <p>We need to collect this information to send payments to your employer’s behalf.</p>\n              <p>Once you submit your informalities, we’ll verify your information before we start sending any payouts there.</p>\n            </div>\n            <div className=\"banking__form\">\n            {this.state.entryOption ==='sweft' ? (\n              <>\n                <Country  \n                  countrys={this.state.countrys} \n                  currency ={this.state.currency}\n                  selectedCountry={this.state.selectedCountry}\n                  setSelectedCountry={this.setSelectedCountry}\n                  selectedCurrency ={this.state.selectedCurrency}\n                  setSelectedCurrency={this.setSelectedCurrency}\n                />\n              </>\n            ):(<></>)}\n              \n              <SelectBtn entryOption ={this.state.entryOption} setEntryOption ={this.setEntryOption}/>\n              {this.state.entryOption ==='sweft' ? (\n                <>\n                  <Swift setSweftResponse={this.setSweftResponse} />\n                </> \n              ):(\n                <>\n                  <Iban currency ={this.state.currency}/>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}