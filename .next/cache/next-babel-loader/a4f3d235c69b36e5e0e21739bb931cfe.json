{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nimport getConfig from \"next/config\";\nimport sha256 from 'crypto-js/sha256';\nimport hmacSHA512 from 'crypto-js/hmac-sha512';\nimport Base64 from 'crypto-js/enc-base64';\nconst {\n  publicRuntimeConfig\n} = getConfig();\nconst NETWORK = axios.create({\n  baseURL: publicRuntimeConfig.API_URL // withCredentials: true,\n\n});\nNETWORK.interceptors.request.use(function (config) {\n  debugger;\n\n  if (config.url !== 'https://restcountries.eu/rest/v2/all?fields=name;flag;currencies;alpha3Code') {\n    const SECRET = publicRuntimeConfig.SECRET_KEY;\n    let body = JSON.parse(config.data);\n    body = JSON.stringify(body);\n    let hmacDigest = Base64.stringify(hmacSHA512(body, SECRET));\n    config.headers['client-id'] = `${publicRuntimeConfig.CLIENT_ID}`;\n    config.headers.signature = hmacDigest;\n    config.headers['Content-Type'] = 'application/json';\n  }\n\n  return config;\n});\nNETWORK.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  try {\n    let match = Object.keys(apiList()).filter(function (a) {\n      return error.config.url.indexOf(a) !== -1;\n    });\n\n    if (match.length > 0) {\n      console.log(error);\n    }\n\n    if (error.response.status === 500) {//REDIRECT.RouteTo404()\n    }\n  } catch (error) {} // return Promise.reject(error);\n\n});\nexport default NETWORK;","map":{"version":3,"sources":["/Users/ecom-muthukumar.u/prr/jumpstart/components/utls/network.js"],"names":["React","axios","getConfig","sha256","hmacSHA512","Base64","publicRuntimeConfig","NETWORK","create","baseURL","API_URL","interceptors","request","use","config","url","SECRET","SECRET_KEY","body","JSON","parse","data","stringify","hmacDigest","headers","CLIENT_ID","signature","response","error","match","Object","keys","apiList","filter","a","indexOf","length","console","log","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAA0BJ,SAAS,EAAzC;AAEA,MAAMK,OAAO,GAAGN,KAAK,CAACO,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAEH,mBAAmB,CAACI,OADF,CAE3B;;AAF2B,CAAb,CAAhB;AAMAH,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiC,UAAUC,MAAV,EAAkB;AAC/C;;AACF,MAAGA,MAAM,CAACC,GAAP,KAAe,6EAAlB,EAAgG;AAC9F,UAAMC,MAAM,GAAGV,mBAAmB,CAACW,UAAnC;AACA,QAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWN,MAAM,CAACO,IAAlB,CAAX;AACAH,IAAAA,IAAI,GAAGC,IAAI,CAACG,SAAL,CAAeJ,IAAf,CAAP;AACA,QAAIK,UAAU,GAAGlB,MAAM,CAACiB,SAAP,CAAiBlB,UAAU,CAACc,IAAD,EAAOF,MAAP,CAA3B,CAAjB;AAEAF,IAAAA,MAAM,CAACU,OAAP,CAAe,WAAf,IAA8B,GAAElB,mBAAmB,CAACmB,SAAU,EAA9D;AACAX,IAAAA,MAAM,CAACU,OAAP,CAAeE,SAAf,GAA0BH,UAA1B;AACAT,IAAAA,MAAM,CAACU,OAAP,CAAe,cAAf,IAAgC,kBAAhC;AACD;;AAED,SAAOV,MAAP;AACD,CAdD;AAgBAP,OAAO,CAACI,YAAR,CAAqBgB,QAArB,CAA8Bd,GAA9B,CACE,UAASc,QAAT,EAAmB;AAEjB,SAAOA,QAAP;AACD,CAJH,EAKE,UAASC,KAAT,EAAgB;AACd,MAAI;AACF,QAAIC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYC,OAAO,EAAnB,EAAuBC,MAAvB,CAA8B,UAASC,CAAT,EAAY;AACpD,aAAON,KAAK,CAACd,MAAN,CAAaC,GAAb,CAAiBoB,OAAjB,CAAyBD,CAAzB,MAAgC,CAAC,CAAxC;AACD,KAFW,CAAZ;;AAIA,QAAIL,KAAK,CAACO,MAAN,GAAe,CAAnB,EAAsB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACD;;AACD,QAAIA,KAAK,CAACD,QAAN,CAAeY,MAAf,KAA0B,GAA9B,EAAmC,CACjC;AACD;AACF,GAXD,CAWE,OAAOX,KAAP,EAAc,CAAG,CAZL,CAcd;;AACD,CApBH;AAuBA,eAAerB,OAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport getConfig from \"next/config\";\nimport sha256 from 'crypto-js/sha256';\nimport hmacSHA512 from 'crypto-js/hmac-sha512';\nimport Base64 from 'crypto-js/enc-base64';\nconst { publicRuntimeConfig } = getConfig();\n\nconst NETWORK = axios.create({\n  baseURL: publicRuntimeConfig.API_URL,\n  // withCredentials: true,\n\n});\n\nNETWORK.interceptors.request.use(function (config) {\n    debugger\n  if(config.url !== 'https://restcountries.eu/rest/v2/all?fields=name;flag;currencies;alpha3Code'){\n    const SECRET = publicRuntimeConfig.SECRET_KEY;\n    let body = JSON.parse(config.data);\n    body = JSON.stringify(body);\n    let hmacDigest = Base64.stringify(hmacSHA512(body, SECRET));\n\n    config.headers['client-id'] =`${publicRuntimeConfig.CLIENT_ID}`;\n    config.headers.signature =hmacDigest;\n    config.headers['Content-Type']= 'application/json';\n  }\n\n  return config;\n});\n\nNETWORK.interceptors.response.use(\n  function(response) {\n\n    return response;\n  },\n  function(error) {\n    try {\n      let match = Object.keys(apiList()).filter(function(a) {\n        return error.config.url.indexOf(a) !== -1;\n      });\n\n      if (match.length > 0) {\n        console.log(error);\n      }\n      if (error.response.status === 500) {\n        //REDIRECT.RouteTo404()\n      }\n    } catch (error) { }\n\n    // return Promise.reject(error);\n  }\n);\n\nexport default NETWORK;\n"]},"metadata":{},"sourceType":"module"}