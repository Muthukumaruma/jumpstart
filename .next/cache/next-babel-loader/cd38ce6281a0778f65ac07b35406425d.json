{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport React from 'react';\nimport Country from '../components/banking/country';\nimport NETWORK from '../components/utls/network';\nimport SelectBtn from '../components/button/select-btn';\nimport Swift from '../components/banking/swift';\nimport Iban from '../components/banking/iban';\nimport '../sass/components/_banking.scss';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"setSelectedCountry\", data => {\n      this.setState({\n        selectedCountry: data\n      });\n    });\n\n    _defineProperty(this, \"setSelectedCurrency\", data => {\n      this.state.currency.map(currency => {\n        currency.value === data && this.setState({\n          selectedCurrency: currency\n        });\n      });\n    });\n\n    _defineProperty(this, \"setEntryOption\", data => {\n      this.setState({\n        entryOption: data\n      });\n    });\n\n    _defineProperty(this, \"setSweftResponse\", data => {\n      this.setState({\n        sweftResponse: data\n      });\n    });\n\n    this.state = {\n      countrys: [],\n      currency: [],\n      selectedCountry: [],\n      selectedCurrency: [],\n      entryOption: \"sweft\",\n      sweftResponse: []\n    };\n  }\n\n  componentDidMount() {\n    this.getCountry();\n  }\n\n  getCountry() {\n    let self = this;\n    let country = [];\n    let currency = [];\n    NETWORK.get(`https://restcountries.eu/rest/v2/all?fields=name;flag;currencies;alpha3Code`).then(function (res) {\n      res.data.map(data => {\n        country.push({\n          value: data.alpha3Code,\n          label: __jsx(\"div\", {\n            className: \"flag\"\n          }, __jsx(\"img\", {\n            src: data.flag\n          }), data.name),\n          country: data.name\n        });\n        currency.push({\n          value: data.alpha3Code,\n          label: __jsx(\"div\", {\n            className: \"flag\"\n          }, __jsx(\"img\", {\n            src: data.flag\n          }), data.currencies[0].code),\n          currency: data.currencies[0].code\n        });\n      });\n      self.setState({\n        countrys: country,\n        currency: currency\n      });\n    });\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"SPECIMAN \"), __jsx(\"link\", {\n      rel: \"icon\",\n      href: \"/favicon.ico\"\n    })), __jsx(\"h1\", null, \"Welcome to Speciman\"), __jsx(\"div\", {\n      className: \"card\"\n    }, __jsx(\"div\", {\n      className: \"banking\"\n    }, __jsx(\"div\", {\n      className: \"banking__info\"\n    }, __jsx(\"h3\", null, \"Banking Information\"), __jsx(\"p\", null, \"We need to collect this information to send payments to your employer\\u2019s behalf.\"), __jsx(\"p\", null, \"Once you submit your informalities, we\\u2019ll verify your information before we start sending any payouts there.\")), __jsx(\"div\", {\n      className: \"banking__form\"\n    }, this.state.entryOption === 'sweft' ? __jsx(React.Fragment, null, __jsx(Country, {\n      countrys: this.state.countrys,\n      currency: this.state.currency,\n      selectedCountry: this.state.selectedCountry,\n      setSelectedCountry: this.setSelectedCountry,\n      selectedCurrency: this.state.selectedCurrency,\n      setSelectedCurrency: this.setSelectedCurrency\n    })) : __jsx(React.Fragment, null), __jsx(SelectBtn, {\n      entryOption: this.state.entryOption,\n      setEntryOption: this.setEntryOption\n    }), this.state.entryOption === 'sweft' ? __jsx(React.Fragment, null, __jsx(Swift, {\n      setSweftResponse: this.setSweftResponse\n    })) : __jsx(React.Fragment, null, __jsx(Iban, {\n      currency: this.state.currency\n    }))))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/ecom-muthukumar.u/prr/jumpstart/pages/index.js"],"names":["Head","React","Country","NETWORK","SelectBtn","Swift","Iban","Home","Component","constructor","props","data","setState","selectedCountry","state","currency","map","value","selectedCurrency","entryOption","sweftResponse","countrys","componentDidMount","getCountry","self","country","get","then","res","push","alpha3Code","label","flag","name","currencies","code","render","setSelectedCountry","setSelectedCurrency","setEntryOption","setSweftResponse"],"mappings":"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","sourcesContent":["import Head from 'next/head';\nimport React from 'react';\nimport Country from '../components/banking/country';\nimport NETWORK from '../components/utls/network';\nimport SelectBtn from '../components/button/select-btn';\nimport Swift from '../components/banking/swift';\nimport Iban from '../components/banking/iban'\nimport '../sass/components/_banking.scss';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n        countrys:[],\n        currency:[],\n        selectedCountry:[],\n        selectedCurrency:[],\n        entryOption:\"sweft\",\n        sweftResponse:[]\n    }\n  }\n\n  componentDidMount(){\n    this.getCountry();\n  }\n\n  getCountry(){\n    let self = this;\n    let country = [];\n    let currency =[]\n    NETWORK.get(`https://restcountries.eu/rest/v2/all?fields=name;flag;currencies;alpha3Code`)\n    .then(function(res) {\n      res.data.map((data)=>{\n        country.push({value:data.alpha3Code, label:<div className='flag'><img src={data.flag} />{data.name}</div>, country:data.name});\n        currency.push({value:data.alpha3Code, label:<div className='flag'><img src={data.flag} />{data.currencies[0].code}</div> , currency:data.currencies[0].code})\n        \n      })\n      self.setState({\n        countrys:country,\n        currency:currency\n      })\n    })\n  }\n\n  setSelectedCountry = (data)=>{\n    this.setState({selectedCountry:data})\n  }\n\n  setSelectedCurrency = data =>{\n    this.state.currency.map((currency)=>{\n      currency.value === data && this.setState({selectedCurrency:currency})\n    })\n    \n  }\n\n  setEntryOption = (data)=>{\n    this.setState({entryOption:data})\n  }\n\n  setSweftResponse = data=>{\n    this.setState({sweftResponse:data})\n  }\n\n  render(){\n\n    return(\n      <>\n        <Head>\n          <title>SPECIMAN </title>\n          <link rel=\"icon\" href=\"/favicon.ico\" />\n        </Head>\n\n        <h1>Welcome to Speciman</h1>\n        <div className=\"card\">\n          <div className=\"banking\">\n            <div className=\"banking__info\">\n              <h3>Banking Information</h3>\n              <p>We need to collect this information to send payments to your employer’s behalf.</p>\n              <p>Once you submit your informalities, we’ll verify your information before we start sending any payouts there.</p>\n            </div>\n            <div className=\"banking__form\">\n            {this.state.entryOption ==='sweft' ? (\n              <>\n                <Country  \n                  countrys={this.state.countrys} \n                  currency ={this.state.currency}\n                  selectedCountry={this.state.selectedCountry}\n                  setSelectedCountry={this.setSelectedCountry}\n                  selectedCurrency ={this.state.selectedCurrency}\n                  setSelectedCurrency={this.setSelectedCurrency}\n                />\n              </>\n            ):(<></>)}\n              \n              <SelectBtn entryOption ={this.state.entryOption} setEntryOption ={this.setEntryOption}/>\n              {this.state.entryOption ==='sweft' ? (\n                <>\n                  <Swift setSweftResponse={this.setSweftResponse} />\n                </> \n              ):(\n                <>\n                  <Iban currency ={this.state.currency}/>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}